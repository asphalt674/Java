import java.util.*;
public class Main
{
	public static void Merge(int arr[],int l,int m,int r)
	{
	    int t[]=new int[r-l+1];
	    int i=l;//iterator for left part
	    int j=m+1;//iterator for right part
	    int k=0;//itertar for temp(t)
	    while(i<=m&&j<=r)
	    {
	        if(arr[i]<=arr[j])
	        {
	            t[k]=arr[i];
	            i++;
	        }
	        else
	        {
	           t[k]=arr[j];
	            j++; 
	        }
	        k++;
	    }
	    //for leftover elements of 1st sorted part(left)
	    while(i<=m)
	    {
	        t[k++]=arr[i++];
	    }
	    //for leftover elements of 1st sorted part(right)
	    while(j<=r)
	    {
	        t[k++]=arr[j++];//if we dont store array in 3rd variable,it will substitute 9 with 8,and 9 will perish
	    }
	    //copy temp(t) to original arr
	    for(i=l,k=0;i<=r;i++,k++)
	    {
	        arr[i]=t[k];
	    }
	    for(i=l;i<=r;i++)
	    {
	        System.out.print(arr[i]+" ");
	    }
	     System.out.println();
	}
	public static void MergeSort(int arr[],int l,int r)
	{
	    int m;
	    if(l<r)
	    {
	        m=(l+r)/2;
	        MergeSort(arr,l,m);//left part
	        MergeSort(arr,m+1,r);//right part
	        Merge(arr,l,m,r);
	    }
	}
	public static void main(String[] args)
	{
		int arr[]={9,8,7,6,5,4};
		MergeSort(arr,0,arr.length-1);
		System.out.println("Array after sorting elements using MergeSort are " );
		 for(int i=0;i<arr.length;i++)
	    	{
	       		System.out.print(arr[i]+" ");
	    	}
	}
}
