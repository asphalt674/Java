import java.util.*;
public class heap
{
    public static void swap(int a[],int i,int j)
    {
        int t=a[i];
        a[i]=a[j];
        a[j]=t;
    }
    public static void heapify(int a[],int n,int i)
    {
        int largest=i;
        int l=2*i+1;
        int r=2*i+2;
        if(l<n&&a[l]>a[largest])
        {
            largest=l;
        }
          if(r<n&&a[r]>a[largest])
        {
            largest=r;
        }
        if(largest!=i)
        {
            swap(a,i,largest);
            heapify(a,n,largest);
        }
        
    }
    public static void heapsort(int a[],int n)
    {        
        buildheap(a,n);
        for(int i=n-1;i>0;i--)
        {
            swap(a,0,i);//largest element goes at the last and so on..
            heapify(a,i,0);
        }
    }
    public static void buildheap(int a[],int n)//O(N)
    {
        for(int i=n/2-1;i>=0;i--)
        {
            heapify(a,n,i);
        }
    }
    public static void main(String[]args)
    {
        Scanner sc=new Scanner(System.in);
        System.out.println("Enter the size of array");
        int n=sc.nextInt();
        int a[]=new int[n];
        System.out.println("Enter the elements");
        for(int i=0;i<n;i++)
        {
            a[i]=sc.nextInt();
        }
        heapsort(a,n);
        System.out.println("The elements of the heapsort after sorting are ");
         for(int i=0;i<n;i++)
        {
            System.out.print(a[i]+" ");
        }
        
    }
}
