import java.util.*;
public class Main
{
    static int k=1;
    public static boolean issafe(char board[][],int row,int col)
    {
        //vertical up
        for(int i=row-1;i>=0;i--)
        {
            if(board[i][col]=='Q')
            {
                return false;
            }
        }
        //diag left up
        for(int i=row-1,j=col-1;i>=0&&j>=0;i--,j--)
        {
            if(board[i][j]=='Q')
            {
                 return false;
            }
        }
        //diag right up
        for(int i=row-1,j=col+1;i>=0&&j<board.length;i--,j++)
        {
            if(board[i][j]=='Q')
            {
                 return false;
            }
        }
        return true;
    }
    public static void nQueens(char board[][],int row)
    {
        //base
        if(row==board.length)
        {
            printBoard(board);
            return;
        }
        //column loop
        for(int j=0;j<board.length;j++)
        {
            if(issafe(board,row,j))
            {
                board[row][j]='Q';
                nQueens(board,row+1);//function call
                board[row][j]='X';//Backtracking step
            }
        }
    }
    public static void printBoard(char board[][])
    {
        System.out.println("------------- Chess Board----------"+k);
        for(int i=0;i<board.length;i++)
        {
            for(int j=0;j<board.length;j++)
            {
                System.out.print(board[i][j]+" ");
            }
             System.out.println();
        }
        k++;
    }
	public static void main(String[] args)
	{
	    Scanner sc=new Scanner(System.in);
		System.out.println("Enter the no of queens");
		int n=sc.nextInt();
		int i,j;
		char board[][]=new char[n][n];
		for(i=0;i<n;i++)
		{
		    for(j=0;j<n;j++)
		    {
		        board[i][j]='X';
		    }
		}
		nQueens(board,0);
	}
}
