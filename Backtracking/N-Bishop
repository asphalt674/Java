public class Main
{
    static int k=1;
    public static boolean issafe(char board[][],int row,int col)
    {
        int i,j;
        //left diagonal
        //here starting from r-1 because in r position no B anyways,so check from previous
        for(i=row-1,j=col-1;i>=0&&j>=0;i--,j--)
        {
            if(board[i][j]=='B')
            {
                return false;
            }
        }
        //right diagonal
        //here starting from c+1 because in r position no B anyways,so check from above
        for(i=row-1,j=col+1;i>=0&&j<=board.length-1;i--,j++)
        {
            if(board[i][j]=='B')
            {
                return false;
            }
        }
        return true;
    }
    public static void nbishops(char board[][],int rows)
    {
        if(rows==board.length)
        {
            print(board);
            return;
        }
        for(int j=0;j<board.length;j++)
        {
            if(issafe(board,rows,j))
            {
                board[rows][j]='B';
                nbishops(board,rows+1); 
                board[rows][j]='X';
            }
        }
    }
    public static void print(char board[][])
    {
        System.out.println("--------------------Chess Board-----------------"+k);
        int i,j;
        for(i=0;i<board.length;i++)
		{
		    for(j=0;j<board.length;j++)
		    {
		        System.out.print(board[i][j]+" ");
		    }
		     System.out.println();
		}
		k++;
    }
	public static void main(String[] args)
	{
	    Scanner sc=new Scanner(System.in);
		System.out.println("Enter the no of bishops");
		int n=sc.nextInt();
		int i,j;
		char board[][]=new char[n][n];
		for(i=0;i<n;i++)
		{
		    for(j=0;j<n;j++)
		    {
		        board[i][j]='X';
		    }
		}
		nbishops(board,0);
	}
}
